/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package advancedatm;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
/**
 *
 * @author user
 */
public class transaction extends javax.swing.JFrame {

    /**
     * Creates new form transaction
     */
    static Connection conn;
    static String account_number;
    public transaction(Connection conn, String acn) {
        initComponents();
        this.conn = conn;
        account_number = acn;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        recpt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        amnt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Transaction");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Recipient account number");

        recpt.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        recpt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recptActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Amount");

        amnt.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("Transfer");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(292, 292, 292)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(64, 64, 64)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(recpt, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                                    .addComponent(amnt))))))
                .addContainerGap(189, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jLabel1)
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recpt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amnt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void recptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recptActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_recptActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new base(conn, account_number).setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String recpient_account = recpt.getText();
        String amount = amnt.getText();
        
        if(amount.length()==0 || recpient_account.length()==0){
            JOptionPane.showMessageDialog(null, "input feilds cannot be empty");
        }
        else if(recpient_account.equals(account_number)){
            JOptionPane.showMessageDialog(null, "you cannot transfer to your account");
        }
        else{
            try {
                Double value = Double.parseDouble(amount);
                PreparedStatement ps;
             
                Statement st = conn.createStatement();
                String query = "select balance from accounts where account_number = '"+recpient_account+"'", bal="-1";
                ResultSet rs = st.executeQuery(query);
                if(value < 100){
                    JOptionPane.showMessageDialog(null, "minimum allowed transfer amount is 100");
                }
                else{
                if(rs.next()){
                    bal = rs.getString(1);
                    Double recpient_balance = Double.parseDouble(bal);
                    query = "select balance, full_name from accounts where account_number = '"+account_number+"'";
                    rs = st.executeQuery(query);
                    if(rs.next()){
                        bal = rs.getString(1);
                        String nm = rs.getString(2);
                        Double my_balance = Double.parseDouble(bal);
                        if(my_balance >= value){
                            int aa = JOptionPane.showConfirmDialog(null, "are you sure?");
                            if(aa == JOptionPane.YES_OPTION){
                                Double rc_new_balance = recpient_balance + value;
                                query = "update accounts set balance = "+rc_new_balance+" where account_number = '"+recpient_account+"'";
                                ps = conn.prepareStatement(query);
                                int res1 = ps.executeUpdate();
                                Double my_new_balance = my_balance - value;
                                query= "update accounts set balance = "+my_new_balance+" where account_number = '"+account_number+"'";;
                                ps = conn.prepareStatement(query);
                                int res2 = ps.executeUpdate();
                                if(res1 == 1 && res2 == 1){
                                    query = "insert into transaction values("+"'"+account_number+"', "+"'debit', '"+recpient_account+"', "+value+")";
                                    ps = conn.prepareStatement(query);
                                    res1 = ps.executeUpdate();
                                    query = "insert into transaction values("+"'"+recpient_account+"', "+"'credit', '"+account_number+"', "+value+")";
                                    ps = conn.prepareStatement(query);
                                    res1 = ps.executeUpdate();
                                    JOptionPane.showMessageDialog(null, "succesfully transferred "+ value + " to " + nm+"\nyour balance is "+my_new_balance);
                                }
                            }
                            else{
                                JOptionPane.showMessageDialog(null, "operation canceled");
                            }  
                        }
                            
                        else{
                            JOptionPane.showMessageDialog(null, "insuffcient balance");
                        }
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "The user doesnot exist");
                }
            }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "incorrect input");
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new transaction(conn, account_number).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amnt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField recpt;
    // End of variables declaration//GEN-END:variables
}
